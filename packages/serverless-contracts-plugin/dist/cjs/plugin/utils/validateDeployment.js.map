{"version":3,"file":"validateDeployment.js","names":["validateDeployment","localContracts","remoteContracts","deploymentStrategy","DeploymentStrategies","PROVIDER_FIRST","validateProviderFirstDeployment","validateConsumerFirstDeployment","localContractSchemas","remoteContractSchemas","localProvides","provides","remoteProvides","Promise","all","Object","entries","map","contractName","remoteContractSchema","localContractSchema","undefined","Error","JsonSchemaDiff","diffSchemas","sourceSchema","destinationSchema","removalsFound","localConsumes","consumes","remoteConsumes","additionsFound"],"sources":["../../../../src/plugin/utils/validateDeployment.ts"],"sourcesContent":["import JsonSchemaDiff from 'json-schema-diff';\n\nimport { DeploymentStrategies } from 'types/deploymentTypes';\nimport {\n  RemoteServerlessContractSchemas,\n  ServerlessContractSchemas,\n} from 'types/serviceOptions';\n\nexport const validateDeployment = async (\n  localContracts: ServerlessContractSchemas,\n  remoteContracts: RemoteServerlessContractSchemas,\n  deploymentStrategy: DeploymentStrategies,\n): Promise<void> => {\n  if (deploymentStrategy === DeploymentStrategies.PROVIDER_FIRST) {\n    await validateProviderFirstDeployment(localContracts, remoteContracts);\n  } else {\n    await validateConsumerFirstDeployment(localContracts, remoteContracts);\n  }\n};\n\n/**\n * validate a provider-first deployment.\n *\n * In this case, we need to check that:\n * - the contracts provided by the remote are still all provided by the local version\n *\n * @param localContractSchemas\n * @param remoteContractSchemas\n */\nconst validateProviderFirstDeployment = async (\n  localContractSchemas: ServerlessContractSchemas,\n  remoteContractSchemas: RemoteServerlessContractSchemas,\n): Promise<void> => {\n  const { provides: localProvides } = localContractSchemas;\n  const { provides: remoteProvides } = remoteContractSchemas;\n\n  // in this case we need to check all the remote provided are still provided\n  await Promise.all(\n    Object.entries(remoteProvides).map(\n      async ([contractName, remoteContractSchema]) => {\n        const localContractSchema = localProvides[contractName];\n\n        if (localContractSchema === undefined) {\n          throw new Error(`Expected to find local contract: ${contractName}`);\n        }\n\n        const { removalsFound } = await JsonSchemaDiff.diffSchemas({\n          // @ts-ignore this is not well typed\n          sourceSchema: remoteContractSchema,\n          // @ts-ignore this is not well typed\n          destinationSchema: localContractSchema,\n        });\n\n        if (removalsFound) {\n          throw new Error(\n            `Unexpected removal in provided contract schema: ${contractName}`,\n          );\n        }\n      },\n    ),\n  );\n};\n\n/**\n * validate a consumer-first deployment.\n *\n * In this case, we need to check that:\n * - the local version does not consume more than the remote\n *\n * @param localContractSchemas\n * @param remoteContractSchemas\n */\nconst validateConsumerFirstDeployment = async (\n  localContractSchemas: ServerlessContractSchemas,\n  remoteContractSchemas: RemoteServerlessContractSchemas,\n): Promise<void> => {\n  const { consumes: localConsumes } = localContractSchemas;\n  const { consumes: remoteConsumes } = remoteContractSchemas;\n\n  // the local version does not consume more than the remote\n  await Promise.all(\n    Object.entries(localConsumes).map(\n      async ([contractName, localContractSchema]) => {\n        const remoteContractSchema = remoteConsumes[contractName];\n\n        if (remoteContractSchema === undefined) {\n          throw new Error(`Expected to find remote contract: ${contractName}`);\n        }\n\n        const { additionsFound } = await JsonSchemaDiff.diffSchemas({\n          // @ts-ignore this is not well typed\n          sourceSchema: remoteContractSchema,\n          // @ts-ignore this is not well typed\n          destinationSchema: localContractSchema,\n        });\n\n        if (additionsFound) {\n          throw new Error(\n            `Unexpected addition in consumed contract schema: ${contractName}`,\n          );\n        }\n      },\n    ),\n  );\n};\n"],"mappings":"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"}