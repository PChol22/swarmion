{"version":3,"file":"artifactDirectory.js","names":["getTimestampFromArtifactDirectoryName","artifactDirectoryName","split","timestamp","undefined","Error","buildPreviousDeploymentArtifactDirectoryName","prefix","service","stage","previousTimestamp","join"],"sources":["../../../../src/plugin/utils/artifactDirectory.ts"],"sourcesContent":["/**\n * Extracts the timestamp from the name of the directory.\n *\n * @param artifactDirectoryName the built directory name: format is serverless/{service}/{stage}/{timestamp}\n */\nexport const getTimestampFromArtifactDirectoryName = (\n  artifactDirectoryName: string,\n): string => {\n  const [, , , timestamp] = artifactDirectoryName.split('/');\n\n  if (timestamp === undefined) {\n    throw new Error(\n      `${artifactDirectoryName} is not of the form 'serverless/{service}/{stage}/{timestamp}'`,\n    );\n  }\n\n  return timestamp;\n};\n\n/**\n *\n * regenerates the artifactDirectoryName of the previous deployment in order to retrieve the deployed version\n * of the contracts\n *\n * @param prefix\n * @param service\n * @param stage\n * @param previousTimestamp\n * @returns serverless/{service}/{stage}/{timestamp}\n *\n */\nexport const buildPreviousDeploymentArtifactDirectoryName = (\n  prefix: string,\n  service: string,\n  stage: string,\n  previousTimestamp: string,\n): string => {\n  return [prefix, service, stage, previousTimestamp].join('/');\n};\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACO,IAAMA,qCAAqC,GAAG,SAAxCA,qCAAqC,CAChDC,qBAA6B,EAClB;EACX,4BAA0BA,qBAAqB,CAACC,KAAK,CAAC,GAAG,CAAC;IAAA;IAA7CC,SAAS;EAEtB,IAAIA,SAAS,KAAKC,SAAS,EAAE;IAC3B,MAAM,IAAIC,KAAK,WACVJ,qBAAqB,oEACzB;EACH;EAEA,OAAOE,SAAS;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAYO,IAAMG,4CAA4C,GAAG,SAA/CA,4CAA4C,CACvDC,MAAc,EACdC,OAAe,EACfC,KAAa,EACbC,iBAAyB,EACd;EACX,OAAO,CAACH,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,iBAAiB,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AAC9D,CAAC;AAAC"}