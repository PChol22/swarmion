{"version":3,"file":"getLatestDeployedTimestamp.js","names":["getLatestDeployedTimestamp","provider","naming","getStackName","undefined","Error","stackName","request","StackName","Stacks","Tags","find","Key","LATEST_DEPLOYED_TIMESTAMP_TAG_NAME","Value"],"sources":["../../../../src/plugin/utils/getLatestDeployedTimestamp.ts"],"sourcesContent":["import * as CloudFormation from 'aws-sdk/clients/cloudformation';\nimport Aws from 'serverless/plugins/aws/provider/awsProvider';\n\nimport { LATEST_DEPLOYED_TIMESTAMP_TAG_NAME } from './constants';\n\nexport const getLatestDeployedTimestamp = async (\n  provider: Aws,\n): Promise<string | undefined> => {\n  if (provider.naming.getStackName === undefined) {\n    throw new Error('Could not get stack name');\n  }\n  const stackName = provider.naming.getStackName();\n\n  try {\n    const { Stacks } = (await provider.request(\n      'CloudFormation',\n      'describeStacks',\n      {\n        StackName: stackName,\n      },\n    )) as CloudFormation.DescribeStacksOutput;\n\n    return Stacks !== undefined\n      ? Stacks[0]?.Tags?.find(\n          ({ Key }) => Key === LATEST_DEPLOYED_TIMESTAMP_TAG_NAME,\n        )?.Value\n      : undefined;\n  } catch {\n    return undefined;\n  }\n};\n"],"mappings":";;;;;;;;;AAGA;AAEO,IAAMA,0BAA0B;EAAA,yFAAG,iBACxCC,QAAa;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,MAETA,QAAQ,CAACC,MAAM,CAACC,YAAY,KAAKC,SAAS;cAAA;cAAA;YAAA;YAAA,MACtC,IAAIC,KAAK,CAAC,0BAA0B,CAAC;UAAA;YAEvCC,SAAS,GAAGL,QAAQ,CAACC,MAAM,CAACC,YAAY,EAAE;YAAA;YAAA;YAAA,OAGpBF,QAAQ,CAACM,OAAO,CACxC,gBAAgB,EAChB,gBAAgB,EAChB;cACEC,SAAS,EAAEF;YACb,CAAC,CACF;UAAA;YAAA;YANOG,MAAM,SAANA,MAAM;YAAA,iCAQPA,MAAM,KAAKL,SAAS,eACvBK,MAAM,CAAC,CAAC,CAAC,8DAAT,SAAWC,IAAI,wEAAf,cAAiBC,IAAI,CACnB;cAAA,IAAGC,GAAG,SAAHA,GAAG;cAAA,OAAOA,GAAG,KAAKC,6CAAkC;YAAA,EACxD,uDAFD,mBAEGC,KAAK,GACRV,SAAS;UAAA;YAAA;YAAA;YAAA,iCAENA,SAAS;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAEnB;EAAA,gBAzBYJ,0BAA0B;IAAA;EAAA;AAAA,GAyBtC;AAAC"}