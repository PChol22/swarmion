{"version":3,"file":"listLocalContractSchemas.js","names":["listLocalContractSchemas","serverless","service","initialServerlessConfig","contracts","provides","consumes","omitBy","mapValues","contract","getContractFullSchema","isUndefined"],"sources":["../../../../src/plugin/utils/listLocalContractSchemas.ts"],"sourcesContent":["import { JSONSchema } from 'json-schema-to-ts';\nimport isUndefined from 'lodash/isUndefined';\nimport mapValues from 'lodash/mapValues';\nimport omitBy from 'lodash/omitBy';\nimport Serverless from 'serverless';\n\nimport { getContractFullSchema } from '@swarmion/serverless-contracts';\n\nimport {\n  ServerlessContracts,\n  ServerlessContractSchemas,\n} from 'types/serviceOptions';\n\nexport const listLocalContractSchemas = (\n  serverless: Serverless,\n): ServerlessContractSchemas => {\n  // @ts-ignore mistype in the orignals (the animals)\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const { provides, consumes } = serverless.service.initialServerlessConfig\n    .contracts as ServerlessContracts;\n\n  return {\n    provides: omitBy(\n      mapValues(provides, contract => getContractFullSchema(contract)),\n      isUndefined,\n    ) as Record<string, JSONSchema>,\n    consumes: omitBy(\n      mapValues(consumes, contract => getContractFullSchema(contract)),\n      isUndefined,\n    ) as Record<string, JSONSchema>,\n  };\n};\n"],"mappings":";;;;;;;AACA;AACA;AACA;AAGA;AAOO,IAAMA,wBAAwB,GAAG,SAA3BA,wBAAwB,CACnCC,UAAsB,EACQ;EAC9B;EACA;EACA,WAA+BA,UAAU,CAACC,OAAO,CAACC,uBAAuB,CACtEC,SAAS;IADJC,QAAQ,QAARA,QAAQ;IAAEC,QAAQ,QAARA,QAAQ;EAG1B,OAAO;IACLD,QAAQ,EAAE,IAAAE,kBAAM,EACd,IAAAC,qBAAS,EAACH,QAAQ,EAAE,UAAAI,QAAQ;MAAA,OAAI,IAAAC,0CAAqB,EAACD,QAAQ,CAAC;IAAA,EAAC,EAChEE,uBAAW,CACkB;IAC/BL,QAAQ,EAAE,IAAAC,kBAAM,EACd,IAAAC,qBAAS,EAACF,QAAQ,EAAE,UAAAG,QAAQ;MAAA,OAAI,IAAAC,0CAAqB,EAACD,QAAQ,CAAC;IAAA,EAAC,EAChEE,uBAAW;EAEf,CAAC;AACH,CAAC;AAAC"}