{"version":3,"file":"serverlessCdk.js","names":["App","Stack","Construct","merge","resolveConfigPath","ServerlessConstruct","throwIfBootstrapMetadataDetected","resolveServerlessConfigPath","getServerlessConfigFile","configPath","require","serverlessConfigFile","MyConstruct","construct","undefined","Error","isConstruct","prototype","ServerlessCdkPlugin","serverless","cliOptions","log","configSchemaHandler","defineTopLevelProperty","type","commands","stackName","app","context","stack","hooks","initialize","resolveConstruct","appendCloudformationResources","configurationVariablesSources","serverlessCdkBridgePlugin","resolve","address","value","constructInstantiationPromise","instantiateConstruct","ServerlessCdkConstruct","isServerlessConstruct","synth","getStackByName","template","Resources","Outputs","Conditions","Mappings","service","resources","prop"],"sources":["../../src/serverlessCdk.ts"],"sourcesContent":["import { App, Stack } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport merge from 'lodash/merge';\nimport * as Serverless from 'serverless';\nimport * as Plugin from 'serverless/classes/Plugin';\nimport resolveConfigPath from 'serverless/lib/cli/resolve-configuration-path';\nimport { O } from 'ts-toolbelt';\n\nimport {\n  CloudFormationTemplate,\n  ServerlessCdkPluginConfig,\n  ServerlessConstruct,\n} from 'types';\nimport { throwIfBootstrapMetadataDetected } from 'utils';\n\ntype ServerlessConfigFile = Serverless & ServerlessCdkPluginConfig;\n\nconst resolveServerlessConfigPath = async (): Promise<string> => {\n  return resolveConfigPath();\n};\n\nconst getServerlessConfigFile = async (): Promise<ServerlessConfigFile> => {\n  const configPath = await resolveServerlessConfigPath();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const serverlessConfigFile = (await require(configPath)) as Serverless & {\n    construct: unknown;\n  };\n\n  const MyConstruct = serverlessConfigFile.construct;\n  if (MyConstruct === undefined) {\n    throw new Error('Missing construct property in serverless configuration');\n  }\n\n  const isConstruct =\n    typeof MyConstruct === 'function' &&\n    (MyConstruct.prototype instanceof ServerlessConstruct ||\n      MyConstruct.prototype instanceof Construct);\n\n  if (!isConstruct) {\n    throw new Error('construct should be a ServerlessConstruct or a Construct');\n  }\n\n  return serverlessConfigFile as ServerlessConfigFile;\n};\n\ninterface OptionsExtended extends Serverless.Options {\n  verbose?: boolean;\n}\n\nexport class ServerlessCdkPlugin implements Plugin {\n  cliOptions: OptionsExtended;\n  serverless: Serverless;\n  hooks: Plugin.Hooks;\n  commands: Plugin.Commands;\n  log: Plugin.Logging['log'];\n  stackName: string;\n  app: App;\n  stack: Stack;\n  configurationVariablesSources?: Plugin.ConfigurationVariablesSources;\n  construct?: ServerlessConstruct | Construct;\n  constructInstantiationPromise?: Promise<void> = undefined;\n\n  constructor(\n    serverless: Serverless,\n    cliOptions: OptionsExtended,\n    { log }: Plugin.Logging,\n  ) {\n    serverless.configSchemaHandler.defineTopLevelProperty('construct', {\n      type: 'object', // A class is an object\n    });\n\n    this.cliOptions = cliOptions;\n    this.log = log;\n\n    this.serverless = serverless;\n\n    this.commands = {};\n\n    this.stackName = 'myStackName';\n\n    this.app = new App({\n      // Used to detect asset usage through metadata\n      context: { 'aws:cdk:enable-asset-metadata': true },\n    });\n    this.stack = new Stack(this.app, this.stackName);\n\n    this.hooks = {\n      initialize: async () => await this.resolveConstruct(),\n      'after:package:compileEvents': () => this.appendCloudformationResources(),\n    };\n\n    this.configurationVariablesSources = {\n      serverlessCdkBridgePlugin: {\n        resolve: async ({ address }: { address: string }) => {\n          await this.resolveConstruct();\n\n          if (this.construct === undefined) {\n            throw new Error('Construct has not been instanciated');\n          }\n\n          if (!(address in this.construct)) {\n            throw new Error('Unexpected');\n          }\n\n          return {\n            // @ts-expect-error we cannot know at build time if the adress key is indeed in the construct\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            value: this.stack.resolve(this.construct[address]),\n          };\n        },\n      },\n    };\n  }\n\n  public static getCdkPropertyHelper = <T extends Construct>(\n    prop: O.SelectKeys<T, string> & string,\n  ): string => {\n    return `$\\{serverlessCdkBridgePlugin:${prop}}`;\n  };\n\n  public static ServerlessConstruct = ServerlessConstruct;\n\n  async resolveConstruct(): Promise<void> {\n    if (\n      this.construct === undefined &&\n      this.constructInstantiationPromise === undefined\n    ) {\n      this.constructInstantiationPromise = this.instantiateConstruct();\n    }\n\n    await this.constructInstantiationPromise;\n  }\n\n  async instantiateConstruct(): Promise<void> {\n    const serverlessConfigFile = await getServerlessConfigFile();\n    const ServerlessCdkConstruct = serverlessConfigFile.construct;\n\n    const isServerlessConstruct =\n      typeof ServerlessCdkConstruct === 'function' &&\n      ServerlessCdkConstruct.prototype instanceof ServerlessConstruct;\n\n    if (isServerlessConstruct) {\n      this.construct = new ServerlessCdkConstruct(this.stack, 'cdk', {\n        serverless: serverlessConfigFile,\n      });\n    } else {\n      this.construct = new ServerlessCdkConstruct(this.stack, 'cdk');\n    }\n  }\n\n  appendCloudformationResources(): void {\n    const { Resources, Outputs, Conditions, Mappings } = this.app\n      .synth()\n      .getStackByName(this.stackName).template as CloudFormationTemplate;\n\n    throwIfBootstrapMetadataDetected({ Resources });\n\n    merge(this.serverless.service, {\n      resources: { Resources, Outputs, Conditions, Mappings },\n    });\n  }\n}\n"],"mappings":"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"}