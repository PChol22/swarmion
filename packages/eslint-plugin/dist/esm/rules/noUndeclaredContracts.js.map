{"version":3,"file":"noUndeclaredContracts.js","names":["findUp","readFileSync","path","create","context","ImportDeclaration","node","importedModule","source","value","importedModulePackageJson","targetDirectory","sync","directory","packageJsonFound","exists","join","undefined","type","importeModulePackageJson","packageJsonFile","JSON","parse","contracts","currentDirectoryServerlessConf","getCwd","closestServerlessTsPath","serverlessConfFile","specifiers","map","specifier","local","name","invalidContracts","filter","contract","contractRegex","RegExp","test","length","report","message","invalidContract","module"],"sources":["../../../src/rules/noUndeclaredContracts.ts"],"sourcesContent":["import { Rule } from 'eslint';\nimport findUp from 'find-up';\nimport { readFileSync } from 'fs';\nimport path from 'path';\n\nconst create = (context: Rule.RuleContext): Rule.RuleListener => {\n  return {\n    ImportDeclaration: node => {\n      const importedModule = node.source.value;\n      if (typeof importedModule !== 'string') {\n        return;\n      }\n\n      const importedModulePackageJson = `node_modules/${importedModule}/package.json`;\n      const targetDirectory = findUp.sync(\n        directory => {\n          const packageJsonFound = findUp.sync.exists(\n            path.join(directory, importedModulePackageJson),\n          );\n          if (!packageJsonFound) {\n            return undefined;\n          }\n\n          return directory;\n        },\n        { type: 'directory' },\n      );\n\n      if (targetDirectory === undefined) {\n        return;\n      }\n\n      const importeModulePackageJson = path.join(\n        targetDirectory,\n        importedModulePackageJson,\n      );\n\n      const packageJsonFile = JSON.parse(\n        readFileSync(importeModulePackageJson, 'utf8'),\n      ) as Record<string, unknown>;\n\n      if (packageJsonFile.contracts !== true) {\n        return;\n      }\n\n      const currentDirectoryServerlessConf = path.join(\n        context.getCwd(),\n        'serverless.ts',\n      );\n\n      const closestServerlessTsPath = findUp.sync.exists(\n        currentDirectoryServerlessConf,\n      )\n        ? currentDirectoryServerlessConf\n        : findUp.sync('serverless.ts');\n\n      if (closestServerlessTsPath === undefined) {\n        return;\n      }\n\n      const serverlessConfFile = readFileSync(closestServerlessTsPath, 'utf-8');\n\n      const contracts = node.specifiers.map(specifier => specifier.local.name);\n\n      const invalidContracts = contracts.filter(contract => {\n        const contractRegex = new RegExp(\n          `contracts: {(\\n|.)*(provides|consumes): {(\\n|.)*${contract}`,\n        );\n\n        return !contractRegex.test(serverlessConfFile);\n      });\n\n      if (invalidContracts.length === 0) {\n        return;\n      }\n\n      context.report({\n        node,\n        message: `Contract${\n          invalidContracts.length > 1 ? 's' : ''\n        } ${invalidContracts\n          .map(invalidContract => `\\`${invalidContract}\\``)\n          .join(\n            ', ',\n          )} from package '${importedModule}' must be declared in the \\`contracts.consumes\\` or \\`contracts.provides\\` property of the 'serverless.ts' service file`,\n      });\n    },\n  };\n};\n\nconst module: Rule.RuleModule = {\n  create,\n};\n\nexport default module;\n"],"mappings":"AACA,OAAOA,MAAM,MAAM,SAAS;AAC5B,SAASC,YAAY,QAAQ,IAAI;AACjC,OAAOC,IAAI,MAAM,MAAM;AAEvB,IAAMC,MAAM,GAAG,SAATA,MAAM,CAAIC,OAAyB,EAAwB;EAC/D,OAAO;IACLC,iBAAiB,EAAE,2BAAAC,IAAI,EAAI;MACzB,IAAMC,cAAc,GAAGD,IAAI,CAACE,MAAM,CAACC,KAAK;MACxC,IAAI,OAAOF,cAAc,KAAK,QAAQ,EAAE;QACtC;MACF;MAEA,IAAMG,yBAAyB,0BAAmBH,cAAc,kBAAe;MAC/E,IAAMI,eAAe,GAAGX,MAAM,CAACY,IAAI,CACjC,UAAAC,SAAS,EAAI;QACX,IAAMC,gBAAgB,GAAGd,MAAM,CAACY,IAAI,CAACG,MAAM,CACzCb,IAAI,CAACc,IAAI,CAACH,SAAS,EAAEH,yBAAyB,CAAC,CAChD;QACD,IAAI,CAACI,gBAAgB,EAAE;UACrB,OAAOG,SAAS;QAClB;QAEA,OAAOJ,SAAS;MAClB,CAAC,EACD;QAAEK,IAAI,EAAE;MAAY,CAAC,CACtB;MAED,IAAIP,eAAe,KAAKM,SAAS,EAAE;QACjC;MACF;MAEA,IAAME,wBAAwB,GAAGjB,IAAI,CAACc,IAAI,CACxCL,eAAe,EACfD,yBAAyB,CAC1B;MAED,IAAMU,eAAe,GAAGC,IAAI,CAACC,KAAK,CAChCrB,YAAY,CAACkB,wBAAwB,EAAE,MAAM,CAAC,CACpB;MAE5B,IAAIC,eAAe,CAACG,SAAS,KAAK,IAAI,EAAE;QACtC;MACF;MAEA,IAAMC,8BAA8B,GAAGtB,IAAI,CAACc,IAAI,CAC9CZ,OAAO,CAACqB,MAAM,EAAE,EAChB,eAAe,CAChB;MAED,IAAMC,uBAAuB,GAAG1B,MAAM,CAACY,IAAI,CAACG,MAAM,CAChDS,8BAA8B,CAC/B,GACGA,8BAA8B,GAC9BxB,MAAM,CAACY,IAAI,CAAC,eAAe,CAAC;MAEhC,IAAIc,uBAAuB,KAAKT,SAAS,EAAE;QACzC;MACF;MAEA,IAAMU,kBAAkB,GAAG1B,YAAY,CAACyB,uBAAuB,EAAE,OAAO,CAAC;MAEzE,IAAMH,SAAS,GAAGjB,IAAI,CAACsB,UAAU,CAACC,GAAG,CAAC,UAAAC,SAAS;QAAA,OAAIA,SAAS,CAACC,KAAK,CAACC,IAAI;MAAA,EAAC;MAExE,IAAMC,gBAAgB,GAAGV,SAAS,CAACW,MAAM,CAAC,UAAAC,QAAQ,EAAI;QACpD,IAAMC,aAAa,GAAG,IAAIC,MAAM,2DACqBF,QAAQ,EAC5D;QAED,OAAO,CAACC,aAAa,CAACE,IAAI,CAACX,kBAAkB,CAAC;MAChD,CAAC,CAAC;MAEF,IAAIM,gBAAgB,CAACM,MAAM,KAAK,CAAC,EAAE;QACjC;MACF;MAEAnC,OAAO,CAACoC,MAAM,CAAC;QACblC,IAAI,EAAJA,IAAI;QACJmC,OAAO,oBACLR,gBAAgB,CAACM,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,cACpCN,gBAAgB,CACjBJ,GAAG,CAAC,UAAAa,eAAe;UAAA,kBAASA,eAAe;QAAA,CAAI,CAAC,CAChD1B,IAAI,CACH,IAAI,CACL,4BAAkBT,cAAc;MACrC,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC;AAED,IAAMoC,MAAuB,GAAG;EAC9BxC,MAAM,EAANA;AACF,CAAC;AAED,eAAewC,MAAM"}