{"version":3,"file":"noUndeclaredContracts.js","names":["create","context","ImportDeclaration","node","importedModule","source","value","importedModulePackageJson","targetDirectory","findUp","sync","directory","packageJsonFound","exists","path","join","undefined","type","importeModulePackageJson","packageJsonFile","JSON","parse","readFileSync","contracts","currentDirectoryServerlessConf","getCwd","closestServerlessTsPath","serverlessConfFile","specifiers","map","specifier","local","name","invalidContracts","filter","contract","contractRegex","RegExp","test","length","report","message","invalidContract","module"],"sources":["../../../src/rules/noUndeclaredContracts.ts"],"sourcesContent":["import { Rule } from 'eslint';\nimport findUp from 'find-up';\nimport { readFileSync } from 'fs';\nimport path from 'path';\n\nconst create = (context: Rule.RuleContext): Rule.RuleListener => {\n  return {\n    ImportDeclaration: node => {\n      const importedModule = node.source.value;\n      if (typeof importedModule !== 'string') {\n        return;\n      }\n\n      const importedModulePackageJson = `node_modules/${importedModule}/package.json`;\n      const targetDirectory = findUp.sync(\n        directory => {\n          const packageJsonFound = findUp.sync.exists(\n            path.join(directory, importedModulePackageJson),\n          );\n          if (!packageJsonFound) {\n            return undefined;\n          }\n\n          return directory;\n        },\n        { type: 'directory' },\n      );\n\n      if (targetDirectory === undefined) {\n        return;\n      }\n\n      const importeModulePackageJson = path.join(\n        targetDirectory,\n        importedModulePackageJson,\n      );\n\n      const packageJsonFile = JSON.parse(\n        readFileSync(importeModulePackageJson, 'utf8'),\n      ) as Record<string, unknown>;\n\n      if (packageJsonFile.contracts !== true) {\n        return;\n      }\n\n      const currentDirectoryServerlessConf = path.join(\n        context.getCwd(),\n        'serverless.ts',\n      );\n\n      const closestServerlessTsPath = findUp.sync.exists(\n        currentDirectoryServerlessConf,\n      )\n        ? currentDirectoryServerlessConf\n        : findUp.sync('serverless.ts');\n\n      if (closestServerlessTsPath === undefined) {\n        return;\n      }\n\n      const serverlessConfFile = readFileSync(closestServerlessTsPath, 'utf-8');\n\n      const contracts = node.specifiers.map(specifier => specifier.local.name);\n\n      const invalidContracts = contracts.filter(contract => {\n        const contractRegex = new RegExp(\n          `contracts: {(\\n|.)*(provides|consumes): {(\\n|.)*${contract}`,\n        );\n\n        return !contractRegex.test(serverlessConfFile);\n      });\n\n      if (invalidContracts.length === 0) {\n        return;\n      }\n\n      context.report({\n        node,\n        message: `Contract${\n          invalidContracts.length > 1 ? 's' : ''\n        } ${invalidContracts\n          .map(invalidContract => `\\`${invalidContract}\\``)\n          .join(\n            ', ',\n          )} from package '${importedModule}' must be declared in the \\`contracts.consumes\\` or \\`contracts.provides\\` property of the 'serverless.ts' service file`,\n      });\n    },\n  };\n};\n\nconst module: Rule.RuleModule = {\n  create,\n};\n\nexport default module;\n"],"mappings":";;;;;;;AACA;AACA;AACA;AAEA,IAAMA,MAAM,GAAG,SAATA,MAAM,CAAIC,OAAyB,EAAwB;EAC/D,OAAO;IACLC,iBAAiB,EAAE,2BAAAC,IAAI,EAAI;MACzB,IAAMC,cAAc,GAAGD,IAAI,CAACE,MAAM,CAACC,KAAK;MACxC,IAAI,OAAOF,cAAc,KAAK,QAAQ,EAAE;QACtC;MACF;MAEA,IAAMG,yBAAyB,0BAAmBH,cAAc,kBAAe;MAC/E,IAAMI,eAAe,GAAGC,kBAAM,CAACC,IAAI,CACjC,UAAAC,SAAS,EAAI;QACX,IAAMC,gBAAgB,GAAGH,kBAAM,CAACC,IAAI,CAACG,MAAM,CACzCC,gBAAI,CAACC,IAAI,CAACJ,SAAS,EAAEJ,yBAAyB,CAAC,CAChD;QACD,IAAI,CAACK,gBAAgB,EAAE;UACrB,OAAOI,SAAS;QAClB;QAEA,OAAOL,SAAS;MAClB,CAAC,EACD;QAAEM,IAAI,EAAE;MAAY,CAAC,CACtB;MAED,IAAIT,eAAe,KAAKQ,SAAS,EAAE;QACjC;MACF;MAEA,IAAME,wBAAwB,GAAGJ,gBAAI,CAACC,IAAI,CACxCP,eAAe,EACfD,yBAAyB,CAC1B;MAED,IAAMY,eAAe,GAAGC,IAAI,CAACC,KAAK,CAChC,IAAAC,gBAAY,EAACJ,wBAAwB,EAAE,MAAM,CAAC,CACpB;MAE5B,IAAIC,eAAe,CAACI,SAAS,KAAK,IAAI,EAAE;QACtC;MACF;MAEA,IAAMC,8BAA8B,GAAGV,gBAAI,CAACC,IAAI,CAC9Cd,OAAO,CAACwB,MAAM,EAAE,EAChB,eAAe,CAChB;MAED,IAAMC,uBAAuB,GAAGjB,kBAAM,CAACC,IAAI,CAACG,MAAM,CAChDW,8BAA8B,CAC/B,GACGA,8BAA8B,GAC9Bf,kBAAM,CAACC,IAAI,CAAC,eAAe,CAAC;MAEhC,IAAIgB,uBAAuB,KAAKV,SAAS,EAAE;QACzC;MACF;MAEA,IAAMW,kBAAkB,GAAG,IAAAL,gBAAY,EAACI,uBAAuB,EAAE,OAAO,CAAC;MAEzE,IAAMH,SAAS,GAAGpB,IAAI,CAACyB,UAAU,CAACC,GAAG,CAAC,UAAAC,SAAS;QAAA,OAAIA,SAAS,CAACC,KAAK,CAACC,IAAI;MAAA,EAAC;MAExE,IAAMC,gBAAgB,GAAGV,SAAS,CAACW,MAAM,CAAC,UAAAC,QAAQ,EAAI;QACpD,IAAMC,aAAa,GAAG,IAAIC,MAAM,2DACqBF,QAAQ,EAC5D;QAED,OAAO,CAACC,aAAa,CAACE,IAAI,CAACX,kBAAkB,CAAC;MAChD,CAAC,CAAC;MAEF,IAAIM,gBAAgB,CAACM,MAAM,KAAK,CAAC,EAAE;QACjC;MACF;MAEAtC,OAAO,CAACuC,MAAM,CAAC;QACbrC,IAAI,EAAJA,IAAI;QACJsC,OAAO,oBACLR,gBAAgB,CAACM,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,cACpCN,gBAAgB,CACjBJ,GAAG,CAAC,UAAAa,eAAe;UAAA,kBAASA,eAAe;QAAA,CAAI,CAAC,CAChD3B,IAAI,CACH,IAAI,CACL,4BAAkBX,cAAc;MACrC,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC;AAED,IAAMuC,OAAuB,GAAG;EAC9B3C,MAAM,EAANA;AACF,CAAC;AAAC,eAEa2C,OAAM;AAAA"}