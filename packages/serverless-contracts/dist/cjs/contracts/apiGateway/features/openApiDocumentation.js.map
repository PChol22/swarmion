{"version":3,"file":"openApiDocumentation.js","names":["getOpenApiDocumentation","contract","contractDocumentation","responses","description","outputSchema","undefined","content","schema","pathParametersSchema","properties","parameters","Object","entries","map","variableName","variableDefinition","name","required","includes","queryStringParametersSchema","bodySchema","requestBody","path","method","toLowerCase","documentation"],"sources":["../../../../../src/contracts/apiGateway/features/openApiDocumentation.ts"],"sourcesContent":["import { OpenAPIV3 } from 'openapi-types';\n\nimport { ContractOpenApiDocumentation } from 'types/contractOpenApiDocumentation';\n\nimport { ApiGatewayContract } from '../apiGatewayContract';\n\nexport const getOpenApiDocumentation = <Contract extends ApiGatewayContract>(\n  contract: Contract,\n): ContractOpenApiDocumentation => {\n  const contractDocumentation: OpenAPIV3.OperationObject = {\n    responses: {\n      '200': {\n        description: 'Success',\n      },\n    },\n  };\n\n  if (\n    contract.outputSchema !== undefined &&\n    contractDocumentation.responses[200] !== undefined\n  ) {\n    contractDocumentation.responses[200] = {\n      ...contractDocumentation.responses[200],\n      content: {\n        'application/json': {\n          // This cast is done because there is differences between JsonSchema and OpenAPIV3.SchemaObject specs\n          // It may be fixed later\n          // @ref https://swagger.io/specification/\n          schema: contract.outputSchema as OpenAPIV3.SchemaObject,\n        },\n      },\n    };\n  }\n\n  if (contract.pathParametersSchema?.properties !== undefined) {\n    contractDocumentation.parameters = [\n      ...Object.entries(contract.pathParametersSchema.properties).map(\n        ([variableName, variableDefinition]) => ({\n          name: variableName,\n          in: 'path',\n          // This cast is done because there is differences between JsonSchema and OpenAPIV3.SchemaObject specs\n          // It may be fixed later\n          // @ref https://swagger.io/specification/\n          schema: variableDefinition as OpenAPIV3.SchemaObject,\n          required:\n            contract.pathParametersSchema?.required?.includes(variableName) ??\n            false,\n        }),\n      ),\n      ...(contractDocumentation.parameters ?? []),\n    ];\n  }\n\n  if (contract.queryStringParametersSchema?.properties !== undefined) {\n    contractDocumentation.parameters = [\n      ...Object.entries(contract.queryStringParametersSchema.properties).map(\n        ([variableName, variableDefinition]) => ({\n          name: variableName,\n          in: 'query',\n          // This cast is done because there is differences between JsonSchema and OpenAPIV3.SchemaObject specs\n          // It may be fixed later\n          // @ref https://swagger.io/specification/\n          schema: variableDefinition as OpenAPIV3.SchemaObject,\n          required:\n            contract.queryStringParametersSchema?.required?.includes(\n              variableName,\n            ) ?? false,\n        }),\n      ),\n      ...(contractDocumentation.parameters ?? []),\n    ];\n  }\n\n  if (contract.bodySchema !== undefined) {\n    contractDocumentation.requestBody = {\n      content: {\n        'application/json': {\n          // This cast is done because there is differences between JsonSchema and OpenAPIV3.SchemaObject specs\n          // It may be fixed later\n          // @ref https://swagger.io/specification/\n          schema: contract.bodySchema as OpenAPIV3.SchemaObject,\n        },\n      },\n    };\n  }\n\n  return {\n    path: contract.path,\n    method: contract.method.toLowerCase(),\n    documentation: contractDocumentation,\n  };\n};\n"],"mappings":";;;;;;;;;;;;AAMO,IAAMA,uBAAuB,GAAG,SAA1BA,uBAAuB,CAClCC,QAAkB,EACe;EAAA;EACjC,IAAMC,qBAAgD,GAAG;IACvDC,SAAS,EAAE;MACT,KAAK,EAAE;QACLC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,IACEH,QAAQ,CAACI,YAAY,KAAKC,SAAS,IACnCJ,qBAAqB,CAACC,SAAS,CAAC,GAAG,CAAC,KAAKG,SAAS,EAClD;IACAJ,qBAAqB,CAACC,SAAS,CAAC,GAAG,CAAC,mCAC/BD,qBAAqB,CAACC,SAAS,CAAC,GAAG,CAAC;MACvCI,OAAO,EAAE;QACP,kBAAkB,EAAE;UAClB;UACA;UACA;UACAC,MAAM,EAAEP,QAAQ,CAACI;QACnB;MACF;IAAC,EACF;EACH;EAEA,IAAI,0BAAAJ,QAAQ,CAACQ,oBAAoB,0DAA7B,sBAA+BC,UAAU,MAAKJ,SAAS,EAAE;IAAA;IAC3DJ,qBAAqB,CAACS,UAAU,iDAC3BC,MAAM,CAACC,OAAO,CAACZ,QAAQ,CAACQ,oBAAoB,CAACC,UAAU,CAAC,CAACI,GAAG,CAC7D;MAAA;MAAA;QAAEC,YAAY;QAAEC,kBAAkB;MAAA,OAAO;QACvCC,IAAI,EAAEF,YAAY;QAClB,MAAI,MAAM;QACV;QACA;QACA;QACAP,MAAM,EAAEQ,kBAA4C;QACpDE,QAAQ,sDACNjB,QAAQ,CAACQ,oBAAoB,qFAA7B,uBAA+BS,QAAQ,2DAAvC,uBAAyCC,QAAQ,CAACJ,YAAY,CAAC,2EAC/D;MACJ,CAAC;IAAA,CAAC,CACH,gEACGb,qBAAqB,CAACS,UAAU,yEAAI,EAAE,EAC3C;EACH;EAEA,IAAI,0BAAAV,QAAQ,CAACmB,2BAA2B,0DAApC,sBAAsCV,UAAU,MAAKJ,SAAS,EAAE;IAAA;IAClEJ,qBAAqB,CAACS,UAAU,iDAC3BC,MAAM,CAACC,OAAO,CAACZ,QAAQ,CAACmB,2BAA2B,CAACV,UAAU,CAAC,CAACI,GAAG,CACpE;MAAA;MAAA;QAAEC,YAAY;QAAEC,kBAAkB;MAAA,OAAO;QACvCC,IAAI,EAAEF,YAAY;QAClB,MAAI,OAAO;QACX;QACA;QACA;QACAP,MAAM,EAAEQ,kBAA4C;QACpDE,QAAQ,sDACNjB,QAAQ,CAACmB,2BAA2B,qFAApC,uBAAsCF,QAAQ,2DAA9C,uBAAgDC,QAAQ,CACtDJ,YAAY,CACb,2EAAI;MACT,CAAC;IAAA,CAAC,CACH,iEACGb,qBAAqB,CAACS,UAAU,2EAAI,EAAE,EAC3C;EACH;EAEA,IAAIV,QAAQ,CAACoB,UAAU,KAAKf,SAAS,EAAE;IACrCJ,qBAAqB,CAACoB,WAAW,GAAG;MAClCf,OAAO,EAAE;QACP,kBAAkB,EAAE;UAClB;UACA;UACA;UACAC,MAAM,EAAEP,QAAQ,CAACoB;QACnB;MACF;IACF,CAAC;EACH;EAEA,OAAO;IACLE,IAAI,EAAEtB,QAAQ,CAACsB,IAAI;IACnBC,MAAM,EAAEvB,QAAQ,CAACuB,MAAM,CAACC,WAAW,EAAE;IACrCC,aAAa,EAAExB;EACjB,CAAC;AACH,CAAC;AAAC"}