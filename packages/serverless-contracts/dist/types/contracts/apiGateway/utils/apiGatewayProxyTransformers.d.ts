import { ApiGatewayContract } from '../apiGatewayContract';
import { ApiGatewayEvent, ApiGatewayResult, HandlerEventType, OutputType } from '../types';
export declare const proxyEventToHandlerEvent: <Contract extends ApiGatewayContract<string, import("../../../types/http").HttpMethod, import("../types/constants").ApiGatewayIntegrationType, import("../types/constants").ApiGatewayAuthorizerType, import("../../../types/constrainedJSONSchema").ConstrainedJSONSchema | undefined, import("../../../types/constrainedJSONSchema").ConstrainedJSONSchema | undefined, import("../../../types/constrainedJSONSchema").ConstrainedJSONSchema | undefined, import("json-schema-to-ts").JSONSchema7 | undefined, import("json-schema-to-ts").JSONSchema7 | undefined>>({ requestContext, body: proxyEventBody, headers, pathParameters, queryStringParameters, }: ApiGatewayEvent<Contract>) => HandlerEventType<Contract>;
export declare const handlerResponseToProxyResult: <Contract extends ApiGatewayContract<string, import("../../../types/http").HttpMethod, import("../types/constants").ApiGatewayIntegrationType, import("../types/constants").ApiGatewayAuthorizerType, import("../../../types/constrainedJSONSchema").ConstrainedJSONSchema | undefined, import("../../../types/constrainedJSONSchema").ConstrainedJSONSchema | undefined, import("../../../types/constrainedJSONSchema").ConstrainedJSONSchema | undefined, import("json-schema-to-ts").JSONSchema7 | undefined, import("json-schema-to-ts").JSONSchema7 | undefined>>(handlerResponse: OutputType<Contract>) => ApiGatewayResult<Contract>;
//# sourceMappingURL=apiGatewayProxyTransformers.d.ts.map